import numpy as np
import matplotlib.pyplot as plt


# def elu(x,alp):
#     return (x>0)*x + (x<=0)*(alp*(np.exp(x) -1))

def elu(x) :
    # return  np.maximum(2*(np.exp(x)-1) * abs(x)/-x, x) # relu와 유사함, 입력이 0 이하일 경우 부드럽게 깎아준다.
    return (x>=0)*x + (x<0)*0.5*(np.exp(x)-1)

x = np.arange(-5,5,0.1)
y = elu(x)

print(x)
print(y)

plt.plot(x,y)
plt.grid()
plt.show()

'''
[-5.00000000e+00 -4.90000000e+00 -4.80000000e+00 -4.70000000e+00
 -4.60000000e+00 -4.50000000e+00 -4.40000000e+00 -4.30000000e+00
 -4.20000000e+00 -4.10000000e+00 -4.00000000e+00 -3.90000000e+00
 -3.80000000e+00 -3.70000000e+00 -3.60000000e+00 -3.50000000e+00
 -3.40000000e+00 -3.30000000e+00 -3.20000000e+00 -3.10000000e+00
 -3.00000000e+00 -2.90000000e+00 -2.80000000e+00 -2.70000000e+00
 -2.60000000e+00 -2.50000000e+00 -2.40000000e+00 -2.30000000e+00
 -2.20000000e+00 -2.10000000e+00 -2.00000000e+00 -1.90000000e+00
 -1.80000000e+00 -1.70000000e+00 -1.60000000e+00 -1.50000000e+00
 -1.40000000e+00 -1.30000000e+00 -1.20000000e+00 -1.10000000e+00
 -1.00000000e+00 -9.00000000e-01 -8.00000000e-01 -7.00000000e-01
 -6.00000000e-01 -5.00000000e-01 -4.00000000e-01 -3.00000000e-01
 -2.00000000e-01 -1.00000000e-01 -1.77635684e-14  1.00000000e-01
  2.00000000e-01  3.00000000e-01  4.00000000e-01  5.00000000e-01
  6.00000000e-01  7.00000000e-01  8.00000000e-01  9.00000000e-01
  1.00000000e+00  1.10000000e+00  1.20000000e+00  1.30000000e+00
  1.40000000e+00  1.50000000e+00  1.60000000e+00  1.70000000e+00
  1.80000000e+00  1.90000000e+00  2.00000000e+00  2.10000000e+00
  2.20000000e+00  2.30000000e+00  2.40000000e+00  2.50000000e+00
  2.60000000e+00  2.70000000e+00  2.80000000e+00  2.90000000e+00
  3.00000000e+00  3.10000000e+00  3.20000000e+00  3.30000000e+00
  3.40000000e+00  3.50000000e+00  3.60000000e+00  3.70000000e+00
  3.80000000e+00  3.90000000e+00  4.00000000e+00  4.10000000e+00
  4.20000000e+00  4.30000000e+00  4.40000000e+00  4.50000000e+00
  4.60000000e+00  4.70000000e+00  4.80000000e+00  4.90000000e+00]
[-4.96631027e-01 -4.96276708e-01 -4.95885126e-01 -4.95452361e-01
 -4.94974082e-01 -4.94445502e-01 -4.93861330e-01 -4.93215720e-01
 -4.92502212e-01 -4.91713662e-01 -4.90842181e-01 -4.89879044e-01
 -4.88814614e-01 -4.87638237e-01 -4.86338139e-01 -4.84901308e-01
 -4.83313365e-01 -4.81558416e-01 -4.79618898e-01 -4.77475399e-01
 -4.75106466e-01 -4.72488390e-01 -4.69594969e-01 -4.66397244e-01
 -4.62863211e-01 -4.58957501e-01 -4.54641023e-01 -4.49870578e-01
 -4.44598421e-01 -4.38771786e-01 -4.32332358e-01 -4.25215690e-01
 -4.17350556e-01 -4.08658238e-01 -3.99051741e-01 -3.88434920e-01
 -3.76701518e-01 -3.63734103e-01 -3.49402894e-01 -3.33564458e-01
 -3.16060279e-01 -2.96715170e-01 -2.75335518e-01 -2.51707348e-01
 -2.25594182e-01 -1.96734670e-01 -1.64839977e-01 -1.29590890e-01
 -9.06346235e-02 -4.75812910e-02 -8.88178420e-15  1.00000000e-01
  2.00000000e-01  3.00000000e-01  4.00000000e-01  5.00000000e-01
  6.00000000e-01  7.00000000e-01  8.00000000e-01  9.00000000e-01
  1.00000000e+00  1.10000000e+00  1.20000000e+00  1.30000000e+00
  1.40000000e+00  1.50000000e+00  1.60000000e+00  1.70000000e+00
  1.80000000e+00  1.90000000e+00  2.00000000e+00  2.10000000e+00
  2.20000000e+00  2.30000000e+00  2.40000000e+00  2.50000000e+00
  2.60000000e+00  2.70000000e+00  2.80000000e+00  2.90000000e+00
  3.00000000e+00  3.10000000e+00  3.20000000e+00  3.30000000e+00
  3.40000000e+00  3.50000000e+00  3.60000000e+00  3.70000000e+00
  3.80000000e+00  3.90000000e+00  4.00000000e+00  4.10000000e+00
  4.20000000e+00  4.30000000e+00  4.40000000e+00  4.50000000e+00
  4.60000000e+00  4.70000000e+00  4.80000000e+00  4.90000000e+00]
'''