import numpy as np
import matplotlib.pyplot as plt


def selu(x):
    alpha = 1.6732632423543772848170429916717
    lambdaa = 1.0507009873554804934193349852946
    return lambdaa*np.where(x>=0.0, x, alpha*np.exp(x)-alpha)

x = np.arange(-5,5,0.1)
y = selu(x)

print(x)
print(y)

plt.plot(x,y)
plt.grid()
plt.show()

'''
[-5.00000000e+00 -4.90000000e+00 -4.80000000e+00 -4.70000000e+00
 -4.60000000e+00 -4.50000000e+00 -4.40000000e+00 -4.30000000e+00
 -4.20000000e+00 -4.10000000e+00 -4.00000000e+00 -3.90000000e+00
 -3.80000000e+00 -3.70000000e+00 -3.60000000e+00 -3.50000000e+00
 -3.40000000e+00 -3.30000000e+00 -3.20000000e+00 -3.10000000e+00
 -3.00000000e+00 -2.90000000e+00 -2.80000000e+00 -2.70000000e+00
 -2.60000000e+00 -2.50000000e+00 -2.40000000e+00 -2.30000000e+00
 -2.20000000e+00 -2.10000000e+00 -2.00000000e+00 -1.90000000e+00
 -1.80000000e+00 -1.70000000e+00 -1.60000000e+00 -1.50000000e+00
 -1.40000000e+00 -1.30000000e+00 -1.20000000e+00 -1.10000000e+00
 -1.00000000e+00 -9.00000000e-01 -8.00000000e-01 -7.00000000e-01
 -6.00000000e-01 -5.00000000e-01 -4.00000000e-01 -3.00000000e-01
 -2.00000000e-01 -1.00000000e-01 -1.77635684e-14  1.00000000e-01
  2.00000000e-01  3.00000000e-01  4.00000000e-01  5.00000000e-01
  6.00000000e-01  7.00000000e-01  8.00000000e-01  9.00000000e-01
  1.00000000e+00  1.10000000e+00  1.20000000e+00  1.30000000e+00
  1.40000000e+00  1.50000000e+00  1.60000000e+00  1.70000000e+00
  1.80000000e+00  1.90000000e+00  2.00000000e+00  2.10000000e+00
  2.20000000e+00  2.30000000e+00  2.40000000e+00  2.50000000e+00
  2.60000000e+00  2.70000000e+00  2.80000000e+00  2.90000000e+00
  3.00000000e+00  3.10000000e+00  3.20000000e+00  3.30000000e+00
  3.40000000e+00  3.50000000e+00  3.60000000e+00  3.70000000e+00
  3.80000000e+00  3.90000000e+00  4.00000000e+00  4.10000000e+00
  4.20000000e+00  4.30000000e+00  4.40000000e+00  4.50000000e+00
  4.60000000e+00  4.70000000e+00  4.80000000e+00  4.90000000e+00]
[-1.74625336e+00 -1.74500751e+00 -1.74363063e+00 -1.74210894e+00
 -1.74042722e+00 -1.73856862e+00 -1.73651456e+00 -1.73424447e+00
 -1.73173563e+00 -1.72896293e+00 -1.72589863e+00 -1.72251205e+00
 -1.71876930e+00 -1.71463293e+00 -1.71006152e+00 -1.70500934e+00
 -1.69942582e+00 -1.69325507e+00 -1.68643534e+00 -1.67889837e+00
 -1.67056873e+00 -1.66136305e+00 -1.65118921e+00 -1.63994537e+00
 -1.62751901e+00 -1.61378576e+00 -1.59860817e+00 -1.58183433e+00
 -1.56329638e+00 -1.54280878e+00 -1.52016647e+00 -1.49514285e+00
 -1.46748747e+00 -1.43692356e+00 -1.40314521e+00 -1.36581435e+00
 -1.32455738e+00 -1.27896138e+00 -1.22857000e+00 -1.17287891e+00
 -1.11133074e+00 -1.04330949e+00 -9.68134385e-01 -8.85053046e-01
 -7.93233965e-01 -6.91758188e-01 -5.79610110e-01 -4.55667315e-01
 -3.18689344e-01 -1.67305273e-01 -3.12625331e-14  1.05070099e-01
  2.10140197e-01  3.15210296e-01  4.20280395e-01  5.25350494e-01
  6.30420592e-01  7.35490691e-01  8.40560790e-01  9.45630889e-01
  1.05070099e+00  1.15577109e+00  1.26084118e+00  1.36591128e+00
  1.47098138e+00  1.57605148e+00  1.68112158e+00  1.78619168e+00
  1.89126178e+00  1.99633188e+00  2.10140197e+00  2.20647207e+00
  2.31154217e+00  2.41661227e+00  2.52168237e+00  2.62675247e+00
  2.73182257e+00  2.83689267e+00  2.94196276e+00  3.04703286e+00
  3.15210296e+00  3.25717306e+00  3.36224316e+00  3.46731326e+00
  3.57238336e+00  3.67745346e+00  3.78252355e+00  3.88759365e+00
  3.99266375e+00  4.09773385e+00  4.20280395e+00  4.30787405e+00
  4.41294415e+00  4.51801425e+00  4.62308434e+00  4.72815444e+00
  4.83322454e+00  4.93829464e+00  5.04336474e+00  5.14843484e+00]
  '''